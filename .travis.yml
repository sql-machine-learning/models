dist: xenial
cache: pip
branches:
  only:
  - master
  - develop
  - "/^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/"
language: python
python:
- 3.6
- 3.7
service:
- docker
install:
- python setup.py -q install
script:
- python setup.py -q test

jobs:
  include:
  - stage: ElasticDLTest
    script:
    - echo $MAXCOMPUTE_AK
    - echo $MAXCOMPUTE_SK
    - cd base_image && docker build -t sqlflow/modelzoo_base . && cd ..
    - cd sqlflow_models && docker build -t sqlflow/sqlflow_models . && cd ..
    - curl -s https://raw.githubusercontent.com/sql-machine-learning/elasticdl/4a995fe7eaf91bc5a9d50181e9aaaa14d15c8a09/scripts/setup_k8s_env.sh | bash
    - docker run --rm -it --net=host -v $HOME/.kube:/root/.kube -v /home/$USER/.minikube/:/home/$USER/.minikube/ -v /var/run/docker.sock:/var/run/docker.sock -e ODPS_ACCESS_ID=$MAXCOMPUTE_AK -e ODPS_ACCESS_KEY=$MAXCOMPUTE_SK sqlflow/sqlflow_models bash -c "elasticdl train --image_base=sqlflow/sqlflow_models --model_def=dnnclassifier.DNNClassifier --training_data=sqlflow_test_iris_train --data_reader_params='columns=["sepal_length", "sepal_width", "petal_length", "petal_width", "class"]' --envs='ODPS_PROJECT_NAME=gomaxcompute_driver_w7u,ODPS_ACCESS_ID=LTAInsAX53Hhaccp,ODPS_ACCESS_KEY=I2dDwOUEY1QYTzA5ZQfDR3A3cn5SUb' --minibatch_size=2 --model_zoo=/sqlflow_models --job_name=test-odps --num_minibatches_per_task=2 --image_pull_policy=Never" --num_workers=2 --master_resource_request="cpu=400m,memory=256Mi" --master_resource_limit="cpu=1,memory=2048Mi" --worker_resource_request="cpu=400m,memory=256Mi" --worker_resource_limit="cpu=1,memory=3072Mi"
    - curl -s https://raw.githubusercontent.com/sql-machine-learning/elasticdl/c7f678e2617d1e0f20683a84275558e5adf8f452/scripts/validate_job_status.sh | bash /dev/stdin odps
